#!/bin/bash

# Runs an archive & backs up to /home/rtatham/Bax/lifeboat.
# You'll be prompted for a good title - eg srnIntranetB4UpgradeTo8.4
# ARGS - [1] put any string in here to exclude site files from archive

read -p "Enter a meaningful title, starting w 3 lowercase letters (eg 'sdnIntranetB4UpgradeTo8.4'): " notey
read -p "Do you want to include site files? Type 'y' if you do: " goaty

cd ../../../
backup_dir='/home/rtatham/Bax/lifeboat/'

todays_date=$(date +%Y-%m-%d-%H:%M);

# any file exclusions?
if [ "$goaty" == "y" ]
  then
    echo "...including site files"
    exclude_string="--exclude \"sites/default/tmp\""
    excluded="-ALL-FILES"
  else
    exclude_string="--exclude \"sites/default/tmp\" --exclude \"sites/default/files\" --exclude \"sites/default/private\""
    excluded="-SITE-FILES-EXCLUDED"
    echo "...excluding sites/default/files"
fi

# determine the title to be used
if [ -z "$notey" ]
  then
    echo "No title supplied. Use something like - 'sdnIntranetB4UpgradeTo8.4' next time"
    exit 1
  else
    file_name_bit="$notey"
    echo "File name to be '$file_name_bit-$todays_date.tar.gz'"
fi

# get first 3 chars of 1st argument and make a subdirectory with it.
subdir=${file_name_bit:0:3}
backup_to=$backup_dir$subdir

# make the subdirectory if it doesn't already exist
mkdir -p "$backup_to"

drush sql:dump --result-file=db.sql

tar $exclude_string -cvzf "$backup_to"/"$file_name_bit""$excluded"-db-in-root-"$todays_date".tgz .

echo ""
echo ""
echo "tar $exclude_string -cvzf $backup_to/$file_name_bit$excluded-db-in-root-$todays_date.tgz ."
echo ""
echo ""

rm db.sql


echo "...finished - including the db which is in the tar archive. Have a look in $backup_to"
