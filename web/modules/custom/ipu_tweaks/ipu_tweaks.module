<?php

use Drupal\Core\StringTranslation;



function ipu_tweaks_page_attachments(array &$attachments) {
  $theme = \Drupal::theme()->getActiveTheme()->getName();
  //if ($theme == 'adminimal_theme' || $theme == 'adminimal') {
    $attachments['#attached']['library'][] = 'ipu_tweaks/extra-admin';
  //}
}


function ipu_tweaks_preprocess_paragraph(&$variables) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  // Placeholder for amending paragraphs
  //$paragraph = $variables['paragraph'];
  //$parentBundle = $paragraph->getParentEntity()->bundle();
}

function ipu_tweaks_preprocess_paragraph__event_sub_page(&$variables) {
  /* Add the (unique) paragraph id to each para for targeting as tab panels */
  $para = $variables['elements']['#paragraph'];
  $variables['attributes']['id'] = 'field-event-sub-page-tab-'.$para->id();
}

function ipu_tweaks_preprocess_paragraph__ipu_event_sessions(&$variables) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  //$paragraph = $variables['paragraph'];
  // Get the parent node? print_r($paragraph->getParentEntity()->toArray());
  //print 'PETER';

  //exit();
  // Get the parent bundle - a content type - in this case ipu_event
  //$parentBundle = $paragraph->getParentEntity()->bundle();
}

function ipu_tweaks_preprocess_field(&$variables) {
  if (($variables['element']['#field_name'] == 'field_event_sub_page')) {
    // Placeholder for field preprocess.
  }
}
/**
 * Implements hook_field_attach_view_alter()
 */
function ipu_tweaks_entity_display_build_alter(&$output, $context) {
  // Check we're dealing with a field collection field.
  if(!empty($output['paragraph'])) {

    // Check for specific paragraph field.
    if ($output['paragraph']['#field_name'] === 'field_event_sub_page' ) {
      // Alter the prefix. This is not working for some reason.
      //$output['paragraph']['#prefix'] = '<div class="field-collection-container clearfix vivienne">';
    }
  }

}
/* https://www.drupal.org/project/drupal/issues/2955321 */
function ipu_tweaks_entity_type_alter(array &$entity_types) {
  foreach ($entity_types as $entity_type)
  {
    $constraints = $entity_type->getConstraints();
    unset($constraints['EntityUntranslatableFields']);
    $entity_type->setConstraints($constraints);
  }
}